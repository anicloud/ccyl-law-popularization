<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ani.ccyl.leg.persistence.mapper.ScoreRecordMapper">
    <select id="findCurrentQuestion" parameterType="java.lang.Integer" resultType="com.ani.ccyl.leg.persistence.po.QuestionPO">
        SELECT q.* FROM t_question q LEFT JOIN t_score_record s ON q.id=s.src_question_id WHERE s.id=(SELECT id FROM t_score_record WHERE account_id=#{accountId} AND log_date=date_format(now(),'%Y-%m-%d') AND src_type=1 ORDER BY update_time DESC LIMIT 1)
    </select>
    <select id="findDailyScoreRecords" parameterType="java.lang.Integer" resultType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO">
        SELECT * FROM t_score_record WHERE score>0 AND src_question_id IS NOT NULL AND log_date=date_format(now(),'%Y-%m-%d') AND account_id=#{accountId}
    </select>
    <select id="findDailyTotalScore" parameterType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO" resultType="java.lang.Integer">
        SELECT sum(score) FROM t_score_record WHERE account_id=#{accountId} AND log_date=date_format(now(),'%Y-%m-%d')
        <if test="srcType!=null">
            AND src_type=#{srcType}
        </if>
    </select>
    <select id="findById" parameterType="java.lang.Integer" resultMap="scoreResultMap">
        SELECT
            sr.id AS scoreId,sr.account_id AS scoreAccountId, sr.score AS score, sr.src_type AS scoreSrcType, sr.src_question_id AS scoreQuestionId, sr.self_answer AS scoreSelfAnswer, sr.src_account_id AS scoreAccountId,
            acc.id AS accId, acc.open_id AS accOpenId, acc.account_name AS accAccountName, acc.account_pwd AS accAccountPwd, acc.phone AS accPhone, acc.email AS accEmail, acc.address AS accAddress, acc.province AS accProvince, acc.nick_name AS accNickName, acc.portrait AS accPortrait, acc.sex AS accSex, acc.org_name AS accOrgName, acc.age AS accAge,acc.name AS accName,
            q.id AS qId, q.title AS qTitle, q.category AS qCategory, q.content AS qContent, q.option_one AS qOptionOne, q.option_two AS qOptionTwo, q.option_three AS qOptionThree, q.type AS qType, q.answer AS qAnswer, q.question_no AS qQuestionNo, q.file_id AS qFileId
        FROM t_score_record sr, t_account acc, t_question q
        WHERE sr.account_id=acc.id AND sr.src_question_id=q.id AND sr.id=#{id}
    </select>
    <select id="findTotalScore" parameterType="java.lang.Integer" resultType="com.ani.ccyl.leg.commons.dto.TotalScoreDto">
        SELECT t1.score AS score,t2.questionCount AS questionCount,t3.thumbUpCount AS thumbUpCount, t4.signInCount AS signInCount, t5.inviteCount AS inviteCount, t6.shareCount AS shareCount FROM
        (SELECT sum(score) AS score FROM t_score_record WHERE account_id=#{accountId}) t1,
        (SELECT count(src_question_id) AS questionCount FROM t_score_record WHERE src_type=1 AND score &gt; 0 AND account_id=#{accountId}) t2,
        (SELECT count(*) AS thumbUpCount FROM t_score_record WHERE src_type=2 AND account_id=#{accountId}) t3,
        (SELECT count(*) AS signInCount FROM t_score_record WHERE src_type=3 AND account_id=#{accountId}) t4,
        (SELECT count(*) AS inviteCount FROM t_score_record WHERE src_type=4 AND account_id=#{accountId}) t5,
        (SELECT count(*) AS shareCount FROM t_score_record WHERE src_type=5 AND account_id=#{accountId}) t6
    </select>
    <select id="findByConditions" parameterType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO" resultType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO">
        SELECT * FROM t_score_record WHERE src_account_id=#{srcAccountId} AND account_id=#{accountId} AND log_date=date_format(now(),'%Y-%m-%d')
    </select>
    <select id="findDailyTop20" parameterType="java.sql.Timestamp" resultType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO">
        SELECT *,sum(score) AS total_score FROM t_score_record WHERE log_date=date_format(#{createTime},'%Y-%m-%d') AND account_id NOT IN (SELECT account_id FROM t_top20_awards WHERE account_id IS NOT NULL ) GROUP BY account_id ORDER BY total_score DESC,update_time ASC LIMIT 20
    </select>
    <select id="findIsThumbUp" parameterType="java.util.Map" resultType="java.lang.Boolean">
        SELECT CASE t.thumbUps
                WHEN 0 THEN FALSE
                ELSE TRUE
               END
        FROM (SELECT count(account_id) AS thumbUps FROM t_score_record WHERE account_id=#{accountId} AND (src_account_id=#{srcIdOrMac} OR mac_address=#{srcIdOrMac}) AND t_score_record.src_type=2 AND log_date=date_format(now(),'%Y-%m-%d') LIMIT 1) t
    </select>
    <select id="findIsSignIn" parameterType="java.lang.Integer" resultType="java.lang.Boolean">
        SELECT CASE t.signIns
            WHEN 0 THEN FALSE
            ELSE TRUE
            END
        FROM (SELECT count(account_id) AS signIns FROM t_score_record WHERE account_id=#{accountId} AND src_type=3 AND log_date=date_format(now(),'%Y-%m-%d') LIMIT 1) t
    </select>
    <select id="findTotalSignIn" parameterType="java.lang.Integer" resultType="java.sql.Timestamp">
        SELECT create_time FROM t_score_record WHERE account_id=#{accountId} AND date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m') AND src_type=3
    </select>
    <select id="findDailyCorrectCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(DISTINCT src_question_id) FROM t_score_record WHERE account_id=#{accountId} AND log_date=date_format(now(),'%Y-%m-%d') AND src_type=1 AND score &gt; 0
    </select>
    <select id="findDailyShareCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(account_id) FROM t_score_record WHERE account_id=#{accountId} AND src_type=5 AND log_date=date_format(now(),'%Y-%m-%d')
    </select>
    <select id="findSelfRank" parameterType="java.sql.Timestamp" resultType="com.ani.ccyl.leg.persistence.po.ScoreRecordPO">
        SELECT *,sum(score) AS total_score FROM t_score_record WHERE log_date=date_format(#{createTime},'%Y-%m-%d') AND account_id NOT IN (SELECT account_id FROM t_top20_awards WHERE account_id IS NOT NULL ) GROUP BY account_id ORDER BY total_score DESC,update_time ASC
    </select>
    <select id="findDailyThumbUpCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(id) FROM t_score_record WHERE src_type=2 AND account_id=#{accountId} AND log_date=date_format(now(),'%Y-%m-%d')
    </select>
    <resultMap id="scoreResultMap" type="com.ani.ccyl.leg.commons.dto.ScoreRecordDto">
        <id property="id" column="scoreId"/>
        <result property="score" column="score"/>
        <result property="selfAnswer" column="scoreSelfAnswer"/>
        <result property="srcType" column="scoreSrcType"/>
        <association property="srcQuestion" column="scoreQuestionId" javaType="com.ani.ccyl.leg.commons.dto.QuestionDto" resultMap="questionResultMap"/>
        <association property="srcAccount" column="scoreAccountId" javaType="com.ani.ccyl.leg.commons.dto.AccountDto" resultMap="accountResultMap"/>
    </resultMap>
    <resultMap id="questionResultMap" type="com.ani.ccyl.leg.commons.dto.QuestionDto">
        <id property="id" column="qId"/>
        <result property="title" column="qTitle"/>
        <result property="category" column="qCategory"/>
        <result property="content" column="qContent"/>
        <result property="optionOne" column="qOptionOne"/>
        <result property="optionTwo" column="qOptionTwo"/>
        <result property="optionThree" column="qOptionThree"/>
        <result property="type" column="qType"/>
        <result property="answer" column="qAnswer"/>
        <result property="questionNo" column="qQuestionNo"/>
        <result property="fileId" column="qFileId"/>
    </resultMap>
    <resultMap id="accountResultMap" type="com.ani.ccyl.leg.commons.dto.AccountDto">
        <id property="id" column="accId"/>
        <result property="openId" column="accOpenId"/>
        <result property="accountName" column="accAccountName"/>
        <result property="accountPwd" column="accAccountPwd"/>
        <result property="phone" column="accPhone"/>
        <result property="email" column="accEmail"/>
        <result property="address" column="accAddress"/>
        <result property="province" column="accProvince"/>
        <result property="nickName" column="accNickName"/>
        <result property="portrait" column="accPortrait"/>
        <result property="isReward" column="accIsReward"/>
        <result property="sex" column="accSex"/>
        <result property="orgName" column="accOrgName"/>
        <result property="age" column="accAge"/>
        <result property="name" column="accName"/>
    </resultMap>
</mapper>